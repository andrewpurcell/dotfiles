# .my_profile
# Named as such so it won't be accidentally included by oh-my-zsh "helpers"

[ -r $HOME/.gr_profile ] && source $HOME/.gr_profile
[ -r $HOME/.home_profile ] && source $HOME/.home_profile

#export SCALA_HOME=/usr/local/bin/scala
#export PATH=$PATH:$SCALA_HOME/bin
#alias hstart="/usr/local/Cellar/hadoop/2.7.0/sbin/start-dfs.sh;/usr/local/Cellar/hadoop/2.7.0/sbin/start-yarn.sh"
#alias hstop="/usr/local/Cellar/hadoop/2.7.0/sbin/stop-yarn.sh;/usr/local/Cellar/hadoop/2.7.0/sbin/stop-dfs.sh"

export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/personal-code
source /usr/local/bin/virtualenvwrapper.sh

# Required to get vim colors to work in tmux
export TERM="xterm-256color"

export PATH="node_modules/.bin:$HOME/bin:$HOME/dotfiles/bin:/usr/local/bin:$PATH:$HOME/.rvm/bin"
export EDITOR=/usr/bin/vim

alias g='git'
alias gn='git --no-pager'
alias gl='git log --decorate'
alias glme='git log --decorate --author=purcell'
alias gs='git status'
alias gg='git grep'
alias remote_branches="git ls-remote origin | grep refs/heads | grep -v rc/branch | awk '{ gsub(/refs\/heads\//, \"\", \$2) ; print \$2}'"

alias xg='xargs grep'

alias ffg='find . -type f -print0 | xargs -0 grep'

alias filter-rspec='grep --color=always -vE "/gems/(zeus|rspec)"'

form-array() {
  ruby -ne 'arr=[]; arr << $_.chop while gets; puts arr.inspect'
}

alias bs='./bin/rspec'
alias brails='./bin/rails'

ff() {
  dir="$1"
  [[ -z $dir ]] && dir="."
  find $dir -type f | grep -v .git
}

github() {
  USER="$1"
  REPO="$2"
  DIR="$3"

  if (($# < 2)); then
    echo "Usage: github USER REPO [dirname]"
    return
  fi

  git clone git@github.com:${USER}/${REPO}.git $DIR
}

grnds() {
  github 'ConsultingMD' "$@"
}

rtags() {
  if [ ! -d .git ] ; then
    echo "Need to be in root of git dir"
    exit
  fi

  ctags -R --tag-relative --languages=ruby -f .git/tags .
}

gls() {
  DIR=$1
  if [[ "$DIR" = "" ]]; then DIR='.'; fi
  for f in $(git ls-tree -d HEAD $DIR| awk '{print $4}'); do
    LS=$(ls -lhd $f | awk '{print $9,$6,$7,$8}')
    AUTHOR=$(git --no-pager log -1 --pretty=format:"%h %aN (%aE)" HEAD $f)
    printf "%40s ->  %s\n" "$LS" "$AUTHOR"
  done
}
